insert into COLTABLE (id,type,dt_create,dt_change,nm_column,PARAM33,PARAM45,PARAM46,PARAM64,PARAM79,PARAM3,PARAM6,
PARAM9,PARAM14,PARAM17,PARAM18,PARAM19,PARAM24,PARAM25,PARAM34,PARAM1,PARAM16,PARAM29,PARAM32,PARAM35,PARAM2,PARAM8,
PARAM12,PARAM22,PARAM26,PARAM4,PARAM7,PARAM10,PARAM15,PARAM23,PARAM28,PARAM36,PARAM43,PARAM50,PARAM51,PARAM13,PARAM21,PARAM27,
PARAM59,PARAM74,PARAM5,PARAM11,PARAM20,PARAM30,PARAM44
)
select generate_series,
1 as TYPE, 
now() - '2 years'::interval * random() as DT_CREATE, 
now() - '6 month'::interval * random() as DT_CHANGE,
random_string( (random() * 40 + 5)::int4) as NM_COLUMN,
random() > 0.5 AS PARAM33,
random() > 0.5 AS PARAM45,
random() > 0.5 AS PARAM46,
random() > 0.5 AS PARAM64,
random() > 0.5 AS PARAM79,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM3,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM6,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM9,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM14,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM17,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM18,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM19,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM24,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM25,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM34,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM1,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM16,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM29,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM32,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM35,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM2,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM8,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM12,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM22,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM26,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM4,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM7,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM10,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM15,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM23,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM28,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM36,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM43,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM50,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM51,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM13,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM21,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM27,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM59,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM74,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM5,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM11,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM20,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM30,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM44
from generate_series (1,300000)
;

insert into COLTABLE (id,type,dt_create,dt_change,nm_column,
PARAM33,PARAM45,PARAM81,PARAM87,PARAM100,PARAM2,PARAM8,PARAM31,PARAM40,PARAM42,PARAM3,PARAM6,PARAM37,PARAM38,PARAM41,PARAM48,PARAM55,PARAM56,PARAM60,PARAM61,PARAM5,PARAM11,
PARAM53,PARAM67,PARAM76,PARAM1,PARAM16,PARAM39,PARAM49,PARAM58,PARAM13,PARAM21,PARAM85,PARAM111,PARAM117,PARAM4,PARAM7,PARAM52,PARAM69,PARAM72,PARAM73,PARAM78,PARAM84,PARAM90,
PARAM93)
select generate_series as id,
2 as TYPE, 
now() - '2 years'::interval * random() as DT_CREATE, 
now() - '6 month'::interval * random() as DT_CHANGE,
random_string( (random() * 40 + 5)::int4) as NM_COLUMN,
random() > 0.5 AS PARAM33,
random() > 0.5 AS PARAM45,
random() > 0.5 AS PARAM81,
random() > 0.5 AS PARAM87,
random() > 0.5 AS PARAM100,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM2,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM8,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM31,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM40,
case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM42,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM3,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM6,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM37,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM38,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM41,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM48,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM55,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM56,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM60,
case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM61,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM5,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM11,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM53,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM67,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM76,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM1,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM16,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM39,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM49,
case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM58,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM13,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM21,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM85,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM111,
case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM117,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM4,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM7,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM52,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM69,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM72,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM73,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM78,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM84,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM90,
case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM93
from generate_series (300001,600000);

--INSERT 0 300000
--Time: 3652325.901 ms

insert into COLTABLE (id,type,dt_create,dt_change,nm_column,PARAM33,PARAM45,PARAM102,PARAM105,
PARAM108,PARAM2,PARAM8,PARAM47,PARAM54,PARAM57,PARAM3,PARAM6,PARAM63,PARAM65,PARAM70,PARAM71,PARAM75,
PARAM82,PARAM94,PARAM99,PARAM5,PARAM11,PARAM77,PARAM86,PARAM92,PARAM1,PARAM16,PARAM68,PARAM83,PARAM88,
PARAM13,PARAM21,PARAM117,PARAM123,PARAM149,PARAM4,PARAM7,PARAM96,PARAM97,PARAM104,PARAM114,PARAM115,PARAM120,
PARAM127,PARAM132
)
select generate_series,
3 as TYPE, 
now() - '2 years'::interval * random() as DT_CREATE, 
now() - '6 month'::interval * random() as DT_CHANGE,
random_string( (random() * 40 + 5)::int4) as NM_COLUMN,
 random() > 0.5 AS PARAM33,
 random() > 0.5 AS PARAM45,
 random() > 0.5 AS PARAM102,
 random() > 0.5 AS PARAM105,
 random() > 0.5 AS PARAM108,
 case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM2,
 case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM8,
 case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM47,
 case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM54,
 case when random() > 0.2 then (now() - interval '8 years' * random() + interval '1 year' * random())::date end AS PARAM57,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM3,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM6,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM63,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM65,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM70,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM71,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM75,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM82,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM94,
 case when random() > 0.05 then (50 * random() - 10 * random())::integer end AS PARAM99,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM5,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM11,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM77,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM86,
(select coalesce(array_agg((random() * 50 - random() * 5)::integer)::integer[], ARRAY[]::integer[]) from generate_series(1,(random() * 15)::integer)) AS PARAM92,
 case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM1,
 case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM16,
 case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM68,
 case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM83,
 case when random() < 0.85 then 13573 * random() - 350 * random() end AS PARAM88,
 case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM13,
 case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM21,
 case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM117,
 case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM123,
 case when random() > 0.2 then random_string( (random() * 5000)::int4) end AS PARAM149,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM4,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM7,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM96,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM97,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM104,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM114,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM115,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM120,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM127,
 case when random() > 0.15 then random_string( (random() * 150 + 10)::int4) end AS PARAM132
from generate_series (300000,300000)
;

